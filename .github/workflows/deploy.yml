# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
  push:
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
  test:
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - uses: snok/install-poetry@v1
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      - name: Test with pytest
        run: |
          poetry run pytest
  publish:
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - uses: snok/install-poetry@v1
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      - name: Build package
        run: poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.8.14
  publish-test:
    needs:
      - test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    if: ${{ github.event_name == 'push' && github.ref_name == 'test-publish' }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - uses: snok/install-poetry@v1
      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root
      - name: Build package
        run: poetry build
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          repository-url: https://test.pypi.org/legacy/
